{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from \"react\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { Button, HelperText, TextInput } from \"react-native-paper\";\nimport { styles } from \"../config/styles\";\nimport { sendPasswordResetEmail } from \"firebase/auth\";\nimport { auth } from \"../config/firebase\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport var ForgotPasswordScreen = function ForgotPasswordScreen(_ref) {\n  var route = _ref.route,\n    navigation = _ref.navigation;\n  var _useState = useState({\n      value: \"\",\n      error: \"\"\n    }),\n    _useState2 = _slicedToArray(_useState, 2),\n    email = _useState2[0],\n    setEmail = _useState2[1];\n  var _useState3 = useState(\"\"),\n    _useState4 = _slicedToArray(_useState3, 2),\n    mostraErro = _useState4[0],\n    setMostraErro = _useState4[1];\n  var _ref2 = route.params || false,\n    mensagem = _ref2.mensagem;\n  function onForgotPressed() {\n    sendPasswordResetEmail(auth, email.value).then(function () {\n      setMostraErro(\"Email enviado com sucesso\");\n    }).catch(function (error) {\n      setMostraErro(error.message);\n    });\n  }\n  function lidarComErro(erro) {\n    if (erro == \"auth/wrong-password\") {\n      setMostraErro(\"Senha errada ðŸ˜•\");\n      return;\n    }\n    if (erro == \"auth/user-not-found\") {\n      setMostraErro(\"UsuÃ¡rio nÃ£o encontrado ðŸ˜•\");\n      return;\n    }\n    if (erro == \"auth/invalid-email\") {\n      setMostraErro(\"E-mail invÃ¡lido ðŸ˜•\");\n      return;\n    }\n    setMostraErro(erro);\n  }\n  return _jsxs(View, {\n    style: styles.container,\n    children: [mensagem && _jsx(HelperText, {\n      type: \"info\",\n      children: mensagem\n    }), _jsx(HelperText, {\n      type: \"error\",\n      children: mostraErro\n    }), _jsx(TextInput, {\n      label: \"Digite seu E-mail\",\n      value: email.value,\n      onChangeText: function onChangeText(text) {\n        return setEmail({\n          value: text,\n          error: \"\"\n        });\n      },\n      error: !!email.error,\n      errorText: email.error,\n      style: styles.input\n      ,\n      returnKeyType: \"next\",\n      autoCompleteType: \"email\",\n      textContentType: \"emailAddress\",\n      keyboardType: \"email-address\"\n    }), _jsx(HelperText, {\n      visible: !!email.error,\n      children: email.error\n    }), _jsx(View, {\n      style: styles.esqueceuSenha,\n      children: _jsx(TouchableOpacity, {\n        onPress: function onPress() {\n          return navigation.navigate(\"LoginScreen\");\n        },\n        children: _jsx(Text, {\n          style: styles.label,\n          children: \"Fazer login?\"\n        })\n      })\n    }), _jsx(Button, {\n      mode: \"contained\",\n      onPress: onForgotPressed,\n      children: \"Login\"\n    }), _jsxs(View, {\n      style: styles.row,\n      children: [_jsx(Text, {\n        style: styles.label,\n        children: \"N\\xE3o possui uma conta? \"\n      }), _jsx(TouchableOpacity, {\n        onPress: function onPress() {\n          return navigation.navigate(\"RegisterScreen\");\n        },\n        children: _jsx(Text, {\n          style: styles.link,\n          children: \"Cadastrar\"\n        })\n      })]\n    })]\n  });\n};","map":{"version":3,"names":["React","useState","Button","HelperText","TextInput","styles","sendPasswordResetEmail","auth","ForgotPasswordScreen","route","navigation","value","error","email","setEmail","mostraErro","setMostraErro","params","mensagem","onForgotPressed","then","catch","message","lidarComErro","erro","container","text","input","esqueceuSenha","navigate","label","row","link"],"sources":["/home/senac/LoginScreenReactNativePaper/src/screens/ForgotPassword.jsx"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { TouchableOpacity, Text, View } from \"react-native\";\r\nimport { Button, HelperText, TextInput } from \"react-native-paper\";\r\nimport { styles } from \"../config/styles\";\r\nimport { sendPasswordResetEmail } from \"firebase/auth\";\r\nimport { auth } from \"../config/firebase\";\r\n\r\n\r\nexport const ForgotPasswordScreen = ({ route, navigation }) => {\r\n  const [email, setEmail] = useState({\r\n    value: \"\",\r\n    error: \"\",\r\n  });\r\n\r\n  const [mostraErro, setMostraErro] = useState(\"\");\r\n  const { mensagem } = route.params || false;\r\n\r\n  function onForgotPressed() {\r\n    // forgor password using Firebase Auth\r\n    sendPasswordResetEmail(auth, email.value)\r\n      .then(() => {\r\n        setMostraErro(\"Email enviado com sucesso\");\r\n      })\r\n      .catch((error) => {\r\n        setMostraErro(error.message);\r\n      });\r\n  }\r\n\r\n  function lidarComErro(erro) {\r\n    if (erro == \"auth/wrong-password\") {\r\n      setMostraErro(\"Senha errada ðŸ˜•\");\r\n      return;\r\n    }\r\n    if (erro == \"auth/user-not-found\") {\r\n      setMostraErro(\"UsuÃ¡rio nÃ£o encontrado ðŸ˜•\");\r\n      return;\r\n    }\r\n    if (erro == \"auth/invalid-email\") {\r\n      setMostraErro(\"E-mail invÃ¡lido ðŸ˜•\");\r\n      return;\r\n    }\r\n    setMostraErro(erro);\r\n  }\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      {mensagem && <HelperText type=\"info\">{mensagem}</HelperText>}\r\n      <HelperText type=\"error\">{mostraErro}</HelperText>\r\n      <TextInput\r\n        label=\"Digite seu E-mail\"\r\n        value={email.value}\r\n        onChangeText={(text) => setEmail({ value: text, error: \"\" })}\r\n        error={!!email.error}\r\n        errorText={email.error}\r\n        style={styles.input}\r\n        /* nÃ£o essenciais  */\r\n        returnKeyType=\"next\"\r\n        autoCompleteType=\"email\"\r\n        textContentType=\"emailAddress\"\r\n        keyboardType=\"email-address\"\r\n      />\r\n      <HelperText visible={!!email.error}>{email.error}</HelperText>\r\n\r\n      <View style={styles.esqueceuSenha}>\r\n        <TouchableOpacity onPress={() => navigation.navigate(\"LoginScreen\")}>\r\n          <Text style={styles.label}>Fazer login?</Text>\r\n        </TouchableOpacity>\r\n      </View>\r\n      <Button mode=\"contained\" onPress={onForgotPressed}>\r\n        Login\r\n      </Button>\r\n      <View style={styles.row}>\r\n        <Text style={styles.label}>NÃ£o possui uma conta? </Text>\r\n        <TouchableOpacity onPress={() => navigation.navigate(\"RegisterScreen\")}>\r\n          <Text style={styles.link}>Cadastrar</Text>\r\n        </TouchableOpacity>\r\n      </View>\r\n    </View>\r\n  );\r\n};"],"mappings":"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"},"metadata":{},"sourceType":"module"}