{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nimport React, { useState } from \"react\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { Button, HelperText, TextInput } from \"react-native-paper\";\nimport { auth } from \"../config/firebase\";\nimport { styles } from \"../config/styles\";\nimport { createUserWithEmailAndPassword } from \"firebase/auth\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport var RegisterScreen = function RegisterScreen(_ref) {\n  var navigation = _ref.navigation;\n  var _useState = useState(\"\"),\n    _useState2 = _slicedToArray(_useState, 2),\n    mostraErro = _useState2[0],\n    setMostraErro = _useState2[1];\n  var _useState3 = useState({\n      value: \"\",\n      error: \"\"\n    }),\n    _useState4 = _slicedToArray(_useState3, 2),\n    nome = _useState4[0],\n    setNome = _useState4[1];\n  var _useState5 = useState({\n      value: \"\",\n      error: \"\"\n    }),\n    _useState6 = _slicedToArray(_useState5, 2),\n    email = _useState6[0],\n    setEmail = _useState6[1];\n  var _useState7 = useState({\n      value: \"\",\n      error: \"\"\n    }),\n    _useState8 = _slicedToArray(_useState7, 2),\n    password = _useState8[0],\n    setPassword = _useState8[1];\n  var _useState9 = useState({\n      value: \"\",\n      error: \"\"\n    }),\n    _useState10 = _slicedToArray(_useState9, 2),\n    confirmaPassword = _useState10[0],\n    setConfirmaPassword = _useState10[1];\n  function onRegisterPressed() {\n    console.log(\"RegistroIniciado\");\n    var erro = false;\n    if (nome.value === \"\") {\n      setNome(_objectSpread(_objectSpread({}, nome), {}, {\n        error: \"Entre com o seu nome maravilhoso\"\n      }));\n      erro = true;\n    }\n    if (email.value === \"\") {\n      setEmail(_objectSpread(_objectSpread({}, email), {}, {\n        error: \"Entre com um e-mail v√°lido\"\n      }));\n      erro = true;\n    }\n    if (password.value === \"\") {\n      setPassword(_objectSpread(_objectSpread({}, password), {}, {\n        error: \"Entre com uma senha\"\n      }));\n      erro = true;\n    }\n    if (confirmaPassword.value === \"\") {\n      setConfirmaPassword(_objectSpread(_objectSpread({}, confirmaPassword), {}, {\n        error: \"Repita sua senha\"\n      }));\n      erro = true;\n    }\n    if (confirmaPassword.value != password.value) {\n      erro = true;\n      setConfirmaPassword(_objectSpread(_objectSpread({}, confirmaPassword), {}, {\n        error: \"Senhas n√£o conferem\"\n      }));\n    }\n    if (!erro) {\n      createUserWithEmailAndPassword(auth, email.value, password.value).then(function (value) {\n        console.log(\"Cadastrado com sucesso! \" + value.user.uid);\n        navigation.navigate(\"Inicial\", {\n          mensagem: \"Voc√™ se registrou com muito sucesso! üíã\"\n        });\n      }).catch(function (error) {\n        return lidarComErro(error.code);\n      });\n    }\n  }\n  function lidarComErro(erro) {\n    if (erro == \"auth/weak-password\") {\n      setMostraErro(\"Senha muito Fraquinha\");\n      return;\n    }\n    if (erro == \"auth/credential-already-in-use\") {\n      setMostraErro(\"E-mail j√° cadastrado\");\n      return;\n    }\n    if (erro == \"auth/invalid-email\") {\n      setMostraErro(\"E-mail inv√°lido\");\n      return;\n    }\n    setMostraErro(erro);\n  }\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(Text, {\n      children: \"Cadastro\"\n    }), _jsx(HelperText, {\n      type: \"error\",\n      children: mostraErro\n    }), _jsx(TextInput, {\n      label: \"Nome Completo\",\n      value: nome.value,\n      onChangeText: function onChangeText(text) {\n        return setNome({\n          value: text,\n          error: \"\"\n        });\n      },\n      error: !!nome.error,\n      errorText: nome.error,\n      style: styles.input\n      ,\n      returnKeyType: \"next\",\n      textContentType: \"givenName\",\n      keyboardType: \"default\"\n    }), _jsx(HelperText, {\n      type: \"error\",\n      visible: !!nome.error,\n      children: nome.error\n    }), _jsx(TextInput, {\n      label: \"Digite seu E-mail\",\n      value: email.value,\n      onChangeText: function onChangeText(text) {\n        return setEmail({\n          value: text,\n          error: \"\"\n        });\n      },\n      error: !!email.error,\n      errorText: email.error,\n      style: styles.input\n      ,\n      returnKeyType: \"next\",\n      autoCompleteType: \"email\",\n      textContentType: \"emailAddress\",\n      keyboardType: \"email-address\"\n    }), _jsx(HelperText, {\n      type: \"error\",\n      visible: !!email.error,\n      children: email.error\n    }), _jsx(TextInput, {\n      label: \"Senha\",\n      returnKeyType: \"done\",\n      value: password.value,\n      onChangeText: function onChangeText(text) {\n        return setPassword({\n          value: text,\n          error: \"\"\n        });\n      },\n      error: !!password.error,\n      errorText: password.error,\n      secureTextEntry: true,\n      style: styles.input\n    }), _jsx(HelperText, {\n      type: \"error\",\n      visible: !!password.error,\n      children: password.error\n    }), _jsx(TextInput, {\n      label: \"Confirme sua Senha\",\n      returnKeyType: \"done\",\n      value: confirmaPassword.value,\n      onChangeText: function onChangeText(text) {\n        return setConfirmaPassword({\n          value: text,\n          error: \"\"\n        });\n      },\n      error: !!confirmaPassword.error,\n      errorText: confirmaPassword.error,\n      secureTextEntry: true,\n      style: styles.input\n    }), _jsx(HelperText, {\n      type: \"error\",\n      visible: !!confirmaPassword.error,\n      children: confirmaPassword.error\n    }), _jsxs(View, {\n      style: styles.esqueceuSenha,\n      children: [_jsx(TouchableOpacity, {\n        onPress: function onPress() {\n          return navigation.navigate(\"ForgotPasswordScreen\");\n        },\n        children: _jsx(Text, {\n          style: styles.label,\n          children: \"Esqueceu sua senha?\"\n        })\n      }), _jsx(TouchableOpacity, {\n        onPress: function onPress() {\n          return navigation.navigate(\"LoginScreen\");\n        },\n        children: _jsx(Text, {\n          style: styles.label,\n          children: \"Fazer login\"\n        })\n      })]\n    }), _jsx(Button, {\n      mode: \"contained\",\n      onPress: onRegisterPressed,\n      children: \"Cadastrar\"\n    })]\n  });\n};","map":{"version":3,"names":["React","useState","Button","HelperText","TextInput","auth","styles","createUserWithEmailAndPassword","RegisterScreen","navigation","mostraErro","setMostraErro","value","error","nome","setNome","email","setEmail","password","setPassword","confirmaPassword","setConfirmaPassword","onRegisterPressed","console","log","erro","then","user","uid","navigate","mensagem","catch","lidarComErro","code","container","text","input","esqueceuSenha","label"],"sources":["/home/senac/LoginScreenReactNativePaper/src/screens/RegisterScreen.jsx"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { TouchableOpacity, Text, View } from \"react-native\";\r\nimport { Button, HelperText, TextInput } from \"react-native-paper\";\r\nimport { auth } from \"../config/firebase\";\r\nimport { styles } from \"../config/styles\";\r\nimport { createUserWithEmailAndPassword } from \"firebase/auth\";\r\n\r\nexport const RegisterScreen = ({ navigation }) => {\r\n  const [mostraErro, setMostraErro] = useState(\"\");\r\n  const [nome, setNome] = useState({\r\n    value: \"\",\r\n    error: \"\",\r\n  });\r\n  const [email, setEmail] = useState({\r\n    value: \"\",\r\n    error: \"\",\r\n  });\r\n  const [password, setPassword] = useState({\r\n    value: \"\",\r\n    error: \"\",\r\n  });\r\n  const [confirmaPassword, setConfirmaPassword] = useState({\r\n    value: \"\",\r\n    error: \"\",\r\n  });\r\n\r\n  function onRegisterPressed() {\r\n    console.log(\"RegistroIniciado\");\r\n    let erro = false;\r\n    if (nome.value === \"\") {\r\n      setNome({ ...nome, error: \"Entre com o seu nome maravilhoso\" });\r\n      erro = true;\r\n    }\r\n    if (email.value === \"\") {\r\n      setEmail({ ...email, error: \"Entre com um e-mail v√°lido\" });\r\n      erro = true;\r\n    }\r\n    if (password.value === \"\") {\r\n      setPassword({ ...password, error: \"Entre com uma senha\" });\r\n      erro = true;\r\n    }\r\n    if (confirmaPassword.value === \"\") {\r\n      setConfirmaPassword({\r\n        ...confirmaPassword,\r\n        error: \"Repita sua senha\",\r\n      });\r\n      erro = true;\r\n    }\r\n    if (confirmaPassword.value != password.value) {\r\n      erro = true;\r\n      setConfirmaPassword({\r\n        ...confirmaPassword,\r\n        error: \"Senhas n√£o conferem\",\r\n      });\r\n    }\r\n    if (!erro) {\r\n      createUserWithEmailAndPassword(auth, email.value, password.value)\r\n        .then((value) => {\r\n          console.log(\"Cadastrado com sucesso! \" + value.user.uid);\r\n          navigation.navigate(\"Inicial\", {\r\n            mensagem: \"Voc√™ se registrou com muito sucesso! üíã\",\r\n          });\r\n        })\r\n        .catch((error) => lidarComErro(error.code));\r\n    }\r\n  }\r\n\r\n  function lidarComErro(erro) {\r\n    if (erro == \"auth/weak-password\") {\r\n      setMostraErro(\"Senha muito Fraquinha\");\r\n      return;\r\n    }\r\n    if (erro == \"auth/credential-already-in-use\") {\r\n      setMostraErro(\"E-mail j√° cadastrado\");\r\n      return;\r\n    }\r\n    if (erro == \"auth/invalid-email\") {\r\n      setMostraErro(\"E-mail inv√°lido\");\r\n      return;\r\n    }\r\n    setMostraErro(erro);\r\n  }\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      <Text>Cadastro</Text>\r\n      <HelperText type=\"error\">{mostraErro}</HelperText>\r\n      <TextInput\r\n        label=\"Nome Completo\"\r\n        value={nome.value}\r\n        onChangeText={(text) => setNome({ value: text, error: \"\" })}\r\n        error={!!nome.error}\r\n        errorText={nome.error}\r\n        style={styles.input}\r\n        /* n√£o essenciais  */\r\n        returnKeyType=\"next\"\r\n        textContentType=\"givenName\"\r\n        keyboardType=\"default\"\r\n      />\r\n      <HelperText type=\"error\" visible={!!nome.error}>\r\n        {nome.error}\r\n      </HelperText>\r\n      <TextInput\r\n        label=\"Digite seu E-mail\"\r\n        value={email.value}\r\n        onChangeText={(text) => setEmail({ value: text, error: \"\" })}\r\n        error={!!email.error}\r\n        errorText={email.error}\r\n        style={styles.input}\r\n        /* n√£o essenciais  */\r\n        returnKeyType=\"next\"\r\n        autoCompleteType=\"email\"\r\n        textContentType=\"emailAddress\"\r\n        keyboardType=\"email-address\"\r\n      />\r\n      <HelperText type=\"error\" visible={!!email.error}>\r\n        {email.error}\r\n      </HelperText>\r\n      <TextInput\r\n        label=\"Senha\"\r\n        returnKeyType=\"done\"\r\n        value={password.value}\r\n        onChangeText={(text) => setPassword({ value: text, error: \"\" })}\r\n        error={!!password.error}\r\n        errorText={password.error}\r\n        secureTextEntry\r\n        style={styles.input}\r\n      />\r\n      <HelperText type=\"error\" visible={!!password.error}>\r\n        {password.error}\r\n      </HelperText>\r\n      <TextInput\r\n        label=\"Confirme sua Senha\"\r\n        returnKeyType=\"done\"\r\n        value={confirmaPassword.value}\r\n        onChangeText={(text) => setConfirmaPassword({ value: text, error: \"\" })}\r\n        error={!!confirmaPassword.error}\r\n        errorText={confirmaPassword.error}\r\n        secureTextEntry\r\n        style={styles.input}\r\n      />\r\n      <HelperText type=\"error\" visible={!!confirmaPassword.error}>\r\n        {confirmaPassword.error}\r\n      </HelperText>\r\n      <View style={styles.esqueceuSenha}>\r\n        <TouchableOpacity\r\n          onPress={() => navigation.navigate(\"ForgotPasswordScreen\")}\r\n        >\r\n          <Text style={styles.label}>Esqueceu sua senha?</Text>\r\n        </TouchableOpacity>\r\n        <TouchableOpacity onPress={() => navigation.navigate(\"LoginScreen\")}>\r\n          <Text style={styles.label}>Fazer login</Text>\r\n        </TouchableOpacity>\r\n      </View>\r\n      <Button mode=\"contained\" onPress={onRegisterPressed}>\r\n        Cadastrar\r\n      </Button>\r\n    </View>\r\n  );\r\n};"],"mappings":"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"},"metadata":{},"sourceType":"module"}